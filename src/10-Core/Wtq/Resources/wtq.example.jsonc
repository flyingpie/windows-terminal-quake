{
  //
  // Thank you for checking out WTQ!
  // Here's a couple pointers to get you started configuring it.
  //

  // This file is backed by a JSON schema, which adds autocompletion to editors that support it, like VSCode and Neovim.
  // The schema file is generated by WTQ, next to the settings file itself (this file).
  "$schema": "wtq.schema.json",

  // Also take a look at the GUI, by right-clicking on the tray icon -> Open Main Window.
  // To make it easier to get started, I've turned this on for you, so the GUI pops open right away.
  "ShowUiOnStart": true,

  //
  // There's also the docs for more information: https://wtq.flyingpie.nl
  // And the GitHub page, where issues are tracked: https://github.com/flyingpie/windows-terminal-quake
  //

  // Here we define the apps that should be toggled on- and off the screen.
  "Apps": [

    //
    // A couple examples of popular apps.
    //

    // Windows Terminal, on Windows 10/11:
    // {
    //   "Name": "Windows Terminal",
    //   "Hotkeys": [{ "Modifiers": "Control", "KeyChar": "1" }],
    //   "FileName": "wt",
    //   "ProcessName": "^WindowsTerminal$"
    // }

    // Konsole, for KDE Plasma:
    // {
    //   "Name": "Konsole",
    //   "Hotkeys": [{ "Modifiers": "Control", "KeyChar": "1" }],
    //   "FileName": "konsole"
    // }

    // WezTerm, works on both Windows and Linux:
    // {
    //   "Name": "WezTerm",
    //   "Hotkeys": [{ "Modifiers": "Control", "KeyChar": "1" }],
    //   "FileName": "wezterm-gui" // Note the "-gui" suffix
    // }

    //
    // Here are some more details around configuring an app.
    // Note that not every possible option is mentioned, check the docs for more.
    // Furthermore, see the global options below, many of which can also be applied per app.
    //

    // {
    //   "Name": "The App Name",
    //
    //   "Hotkeys": [
    //     {
    //       "Modifiers": "Alt | Control | Shift | Super", // Multiple keys like "Control, Shift".
    //
    //       // The key as the character that's typed.
    //       // Note that you should include the effects of the "Shift" key, if it is included as a modifier.
    //       // For example, Control + 1, and Control + Shift + !.
    //       "KeyChar": "1"
    //     }
    //   ],
    //
    //   // FileName is used to start an app, if it's not running yet. If no "ProcessName" is set, it's also used to
    //   // find existing windows, by matching it with the window's process name.
    //   "FileName": "the-file-to-run-when-app-is-not-found",
    //
    //   // If an app has a process name different to its file name (like with Windows Terminal), a separate "ProcessName"
    //   // can be used to do the matching. This property also supports regular expressions.
    //   "ProcessName": "^process-name-regex$",
    // }
  ],

  // You can also set hotkeys that toggle whatever app was toggled most recently:
  // "Hotkeys": [{ "Modifiers": "Control", "KeyChar": "Q" }]

  //
  // Here are a couple more setting examples. Note that many of these can be set either globally (like in these cases),
  // or per app, by putting them next to settings like "Hotkeys" and "FileName".
  //

  // There are a couple options for how to attach to an app:
  // - Find: Only look for an existing app instance, don't start any;
  // - FindOrStart: Look for an existing app instance, and start one if none exists;
  // - Manual: When a hotkey is pressed, attach to whatever window has focus.
  // "AttachMode": "Find | FindOrStart | Manual",

  // Very useful for apps like password managers, where you'd want to keep the app toggled on
  // while interacting with a browser or something.
  // "HideOnFocusLost": "Always | Never",

  // Sets the window opacity. Note that this affects the entire application, including the menu bar.
  // "Opacity": 0-100,

  // Some positioning settings:
  // "HorizontalAlign": "Left | Center | Right",
  // "HorizontalScreenCoverage": 0-100, // Defaults to 95
  // "VerticalScreenCoverage": 0-100, // Defaults to 95

  // Animation duration:
  // "AnimationDurationMs": 0 - 1000, // Defaults to 250

  // Location to move a window to, relative to the screen.
  //
  // This is a list of locations, as a location may not always be available.
  //
  // For example, when using multiple monitors, a monitor may be to the "Left" of the current one,
  // making it unavailable for moving app windows to. In such cases, the next location in the list is attempted.
  // If none of the locations is available, the app is instantly moved off-screen, skipping animation.
  // "OffScreenLocations": ["Above", "Below", "Left", "Right"],
}