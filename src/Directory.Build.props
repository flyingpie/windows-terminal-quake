<Project>
	<PropertyGroup>
		<Version>2.0.18</Version>

		<TargetFramework>net9.0</TargetFramework>
		<Nullable>enable</Nullable>

		<!-- Some features we use require a documentation file, like analyzers, and the docs manifest generation -->
		<GenerateDocumentationFile>true</GenerateDocumentationFile>

		<BaseOutputPath>$(MSBuildThisFileDirectory)\..\_output\build</BaseOutputPath>
		<BaseIntermediateOutputPath>$(MSBuildThisFileDirectory)\..\_output\build\obj\$(MSBuildProjectName)</BaseIntermediateOutputPath>
		<OutputPath>$(MSBuildThisFileDirectory)\..\_output\build\bin\$(MSBuildProjectName)</OutputPath>

		<!-- Debug symbols -->
		<DebugType>embedded</DebugType>
		<DebugSymbols>true</DebugSymbols>

		<!-- We don't need compression on a local app -->
		<CompressionEnabled>false</CompressionEnabled>

		<!--
			Set compiler in "strict" mode, which enables some checks that weren't enabled by default, due to them being
			breaking changes (i.e. compiling some code fine one version, and then no longer compiling the next).
		-->
		<Features>strict</Features>

		<!--
			Faster NuGet restores
			https://learn.microsoft.com/en-us/nuget/release-notes/nuget-5.5#summary-whats-new-in-55
		-->
		<RestoreUseStaticGraphEvaluation>true</RestoreUseStaticGraphEvaluation>

		<!-- TODO: Enable when we do a warning cleanup -->
		<!--
		<TreatWarningsAsErrors Condition=" '$(Configuration)' == 'Release' ">true</TreatWarningsAsErrors>
		<MSBuildTreatWarningsAsErrors Condition="' $(Configuration)' == 'Release' ">true</MSBuildTreatWarningsAsErrors>
		-->
		<!-- TODO: Remove when we do a warning cleanup -->
		<WarningLevel>0</WarningLevel>

		<!--
			CS8669:	The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
					Auto-generated code requires an explicit '#nullable' directive in source.
			https://github.com/dotnet/razor/issues/8720
		-->
		<NoWarn>CS8669</NoWarn>

		<!-- Code analysis -->
		<AnalysisMode>All</AnalysisMode>
		<AnalysisLevel>latest</AnalysisLevel>
		<EnableNETAnalyzers>true</EnableNETAnalyzers>
		<EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
		<RunAnalyzers>true</RunAnalyzers>
	</PropertyGroup>

	<!--
		Version & metadata
	-->
	<PropertyGroup>
		<!-- Version -->
		<AssemblyVersion>$(Version)</AssemblyVersion>
		<FileVersion>$(Version)</FileVersion>
		<InformationalVersion>$(Version)</InformationalVersion>
	</PropertyGroup>

	<Target Name="AddGitMetadaAssemblyAttributes" BeforeTargets="GetAssemblyAttributes">

		<!-- Git branch -->
		<Exec
			Command="git rev-parse --abbrev-ref HEAD"
			Condition=" '$(GitBranch)' == '' "
			ConsoleToMsBuild="true"
			IgnoreExitCode="true"
			StandardOutputImportance="low"
		>
			<Output TaskParameter="ConsoleOutput" PropertyName="GitBranch"/>
		</Exec>

		<!-- Git commit -->
		<Exec
			Command="git rev-parse --short=8  HEAD"
			Condition=" '$(GitCommit)' == '' "
			ConsoleToMsBuild="true"
			IgnoreExitCode="true"
			StandardOutputImportance="low"
		>
			<Output TaskParameter="ConsoleOutput" PropertyName="GitCommit"/>
		</Exec>

		<ItemGroup>
			<AssemblyMetadata Include="BuildConfiguration" Value="$(Configuration)"/>
			<AssemblyMetadata Include="BuildTimestamp" Value="$([System.DateTime]::UtcNow.ToString(yyyy-MM-ddTHH:mm:ssK))"/>
			<AssemblyMetadata Condition=" $(GitCommit) != '' " Include="GitCommit" Value="$(GitCommit)"/>
			<AssemblyMetadata Condition=" $(GitBranch) != '' " Include="GitBranch" Value="$(GitBranch)"/>
		</ItemGroup>
	</Target>

	<!--
		Test projects
	-->
	<PropertyGroup Condition=" $(MSBuildProjectName.EndsWith('Test')) ">
		<!--
			Opt-in to the Microsoft Testing Platform.
			https://learn.microsoft.com/en-us/dotnet/core/testing/unit-testing-mstest-runner-intro
		-->
		<EnableMSTestRunner>true</EnableMSTestRunner>

		<!--
			Use MSTest as the runner instead of the default VSTest.
			https://learn.microsoft.com/en-us/dotnet/core/testing/microsoft-testing-platform-integration-dotnet-test
		-->
		<TestingPlatformDotnetTestSupport>true</TestingPlatformDotnetTestSupport>

		<!--
			Show failure per test instead of grouped together.
			https://learn.microsoft.com/en-us/dotnet/core/testing/microsoft-testing-platform-integration-dotnet-test
		-->
		<TestingPlatformShowTestsFailure>true</TestingPlatformShowTestsFailure>
	</PropertyGroup>

	<ItemGroup Condition=" $(MSBuildProjectName.EndsWith('Test')) ">
		<PackageReference Include="Microsoft.NET.Test.Sdk"/>
		<PackageReference Include="Microsoft.Testing.Extensions.CodeCoverage"/>
		<PackageReference Include="Microsoft.Testing.Extensions.TrxReport"/>
		<PackageReference Include="Moq"/>
		<PackageReference Include="MSTest"/>
		<PackageReference Include="SystemTextJson.JsonDiffPatch"/>
	</ItemGroup>

	<!--
		Analyzers
	-->
	<ItemGroup>
		<PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive"/>
		<PackageReference Include="SonarAnalyzer.CSharp" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive"/>
		<PackageReference Include="StyleCop.Analyzers.Unstable" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive"/>
	</ItemGroup>
</Project>