@using Wtq.Services.UI.Extensions

@code {

	private KeyModifiers _testKeyModifiers;
	private Keys _testKey;

	private ICollection<Keys> KeysValues { get; } = WtqConstants.CommonKeys;

	private class KeyDto
	{
		public Keys Key { get; set; }

		public string Description { get; set; }
	}

	private void HandleKeyDown(KeyboardEventArgs e)
	{
		e.ToModifiersAndKey(out var mod, out var key);

		_testKeyModifiers = mod;
		_testKey = key;
	}

}

<RadzenRow AlignItems="AlignItems.Start">
	<SettingLabel Text="Hotkeys"/>
	<RadzenColumn Size="7">
		MOD:@(_testKeyModifiers.GetDisplayDescription())
		KEY:@(_testKey.GetDisplayDescription())

		@*
			TODO: Textbox to auto-detect the pressed key. Works great, but we need to disable registered hotkeys for this to work properly, otherwise we're triggering already-bound apps.
		*@

		<RadzenTextBox
			Style="width: 100%;"
			@onkeydown="(ev) => HandleKeyDown(ev)"
			Placeholder="Type here to set hotkey."
			Value=""
		/>
	</RadzenColumn>
</RadzenRow>