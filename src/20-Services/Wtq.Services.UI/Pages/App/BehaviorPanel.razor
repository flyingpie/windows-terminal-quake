@inherits BaseAppPanel

@code {

	public bool AlwaysOnTop
	{
		get => AppOpts.AlwaysOnTop ?? WtqOptions.AlwaysOnTop;
		set => AppOpts.AlwaysOnTop = value;
	}

	public HideOnFocusLost HideOnFocusLost
	{
		get => AppOpts.HideOnFocusLost ?? WtqOptions.HideOnFocusLost;
		set => AppOpts.HideOnFocusLost = value;
	}

	public int Opacity
	{
		get => AppOpts.Opacity ?? WtqOptions.Opacity;
		set => AppOpts.Opacity = value;
	}

	public TaskbarIconVisibility TaskbarIconVisibility
	{
		get => AppOpts.TaskbarIconVisibility ?? WtqOptions.TaskbarIconVisibility;
		set => AppOpts.TaskbarIconVisibility = value;
	}

}

<RadzenFieldset Text="Behavior">
	<RadzenStack Gap="1rem">

		<!-- Always On Top -->
		<RadzenRow AlignItems="AlignItems.Start">
			<SettingLabel Text="Always on top" Component="AlwaysOnTop"/>
			<RadzenColumn Size="7">
				<RadzenCheckBox @bind-Value="AlwaysOnTop" Name="AlwaysOnTop"/>

				<Descr>Keep the app on top of other windows, even on focus lost.</Descr>
			</RadzenColumn>
			<SettingGlobal
				HasGlobalSetting="true"
				IsOverridden="@(AppOpts.AlwaysOnTop != null)"
				Reset="@(() => ResetProp(() => AppOpts.AlwaysOnTop = null))"
			/>
		</RadzenRow>

		<!-- Hide On Focus Lost -->
		<RadzenRow AlignItems="AlignItems.Start">
			<SettingLabel Text="Hide on focus lost" Component="HideOnFocusLost"/>
			<RadzenColumn Size="7">
				<RadzenRadioButtonList @bind-Value="HideOnFocusLost" TValue="HideOnFocusLost" Orientation="Orientation.Vertical">
					<Items>
						<RadzenRadioButtonListItem	Value="HideOnFocusLost.Always"						Text="Always"/>
						<RadzenRadioButtonListItem	Value="HideOnFocusLost.Never"						Text="Never"/>
						<RadzenRadioButtonListItem	Value="HideOnFocusLost.UnlessFocusChangedScreen"	Text="Unless focus changed screen"	Disabled="true"/>
					</Items>
				</RadzenRadioButtonList>

				<Descr>Whether the app should <Emph>toggle off</Emph> when focus lost.</Descr>
			</RadzenColumn>
			<SettingGlobal
				HasGlobalSetting="true"
				IsOverridden="@(AppOpts.HideOnFocusLost != null)"
				Reset="@(() => ResetProp(() => AppOpts.HideOnFocusLost = null))"
			/>
		</RadzenRow>

		<!-- Taskbar Icon Visibility -->
		<RadzenRow AlignItems="AlignItems.Start">
			<SettingLabel Text="Taskbar icon visibility" Component="TaskbarIconVisibility"/>
			<RadzenColumn Size="7">
				<RadzenRadioButtonList @bind-Value="TaskbarIconVisibility" TValue="TaskbarIconVisibility" Orientation="Orientation.Vertical">
					<Items>
						<RadzenRadioButtonListItem	Value="TaskbarIconVisibility.AlwaysHidden"			Text="Always hidden"/>
						<RadzenRadioButtonListItem	Value="TaskbarIconVisibility.AlwaysVisible"			Text="Always visible"/>
						<RadzenRadioButtonListItem	Value="TaskbarIconVisibility.WhenAppVisible"		Text="When app visible"		Disabled="true"/>
					</Items>
				</RadzenRadioButtonList>

				<Descr>If and when the app icon should be visible on the <Emph>taskbar</Emph>.</Descr>
			</RadzenColumn>
			<SettingGlobal
				HasGlobalSetting="true"
				IsOverridden="@(AppOpts.TaskbarIconVisibility != null)"
				Reset="@(() => ResetProp(() => AppOpts.TaskbarIconVisibility = null))"
			/>
		</RadzenRow>

		<!-- Opacity -->
		<RadzenRow AlignItems="AlignItems.Start">
			<SettingLabel Text="Opacity" Component="Opacity"/>
			<RadzenColumn Size="7">
				<RadzenNumeric @bind-Value="Opacity" Name="Opacity" class="rz-mr-4" style="width: 80px;"/>
				<RadzenSlider @bind-Value="Opacity" TValue="int"/>

				<Descr>Makes the entire app window transparent. Note that this includes the title bar.</Descr>
			</RadzenColumn>
			<SettingGlobal
				HasGlobalSetting="true"
				IsOverridden="@(AppOpts.Opacity != null)"
				Reset="@(() => ResetProp(() => AppOpts.Opacity = null))"
			/>
		</RadzenRow>

		<!-- Window Title Override -->
		<RadzenRow AlignItems="AlignItems.Start">
			<SettingLabel Text="Window Title Override" Component="WindowTitleOverride" Subtext="optional"/>
			<RadzenColumn Size="7">
				<RadzenTextBox @bind-Value="AppOpts.WindowTitleOverride" Name="WindowTitleOverride" style="width: 100%;"/>

				<Descr>
					Attempt to set the app <Emph>window title</Emph> to this value.
					Note that this may work for some apps.
				</Descr>
			</RadzenColumn>
		</RadzenRow>

	</RadzenStack>
</RadzenFieldset>