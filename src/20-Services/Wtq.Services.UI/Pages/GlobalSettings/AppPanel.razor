@using Wtq.Services.UI.Extensions

@inherits BaseAppPanel

@code {

	private KeyModifiers _testKeyModifiers;
	private Keys _testKey;

	private class KeyDto
	{
		public Keys Key { get; set; }

		public string Description { get; set; }
	}

	private void HandleKeyDown(KeyboardEventArgs e)
	{
		e.ToModifiersAndKey(out var mod, out var key);

		_testKeyModifiers = mod;
		_testKey = key;
	}
}

<RadzenFieldset Text="App">
	<RadzenStack Gap="1rem">

		<!-- Hotkeys -->
		<RadzenRow AlignItems="AlignItems.Start">
			<SettingLabel Text="Hotkeys"/>
			<RadzenColumn Size="7">

				<RadzenStack>

					@* MOD:@(_testKeyModifiers.GetDisplayDescription()) *@
					@* KEY:@(_testKey.GetDisplayDescription()) *@

					@*
						TODO: Textbox to auto-detect the pressed key. Works great, but we need to disable registered hotkeys for this to work properly, otherwise we're triggering already-bound apps.
					*@

					@* <RadzenTextBox *@
					@* 	Style="width: 100%;" *@
					@* 	@onkeydown="(ev) => HandleKeyDown(ev)" *@
					@* 	Placeholder="Type here to set hotkey." *@
					@* 	Value="" *@
					@* /> *@

					@foreach (var hk in AppOpts?.Hotkeys ?? [])
					{
						<Hotkey Options="hk" OnRemove="@(async () => AppOpts.Hotkeys.Remove(hk))" />
					}

					<RadzenStack>
						<RadzenButton
							Icon="add"
							Size="ButtonSize.Medium"
							Click="@(() => AppOpts.Hotkeys.Add(new()))"
						/>
					</RadzenStack>
				</RadzenStack>

				<Descr>What hotkeys should toggle the app.</Descr>
			</RadzenColumn>
			<SettingGlobal/>
		</RadzenRow>
	</RadzenStack>
</RadzenFieldset>