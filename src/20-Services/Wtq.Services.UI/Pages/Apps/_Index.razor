@using Wtq.Services.UI.Components.Settings

@inject IOptionsMonitor<WtqOptions> WtqOpts
@inject DialogService Dialog
@inject NavigationManager NavMan
@inject Notifier Notifier
@inject IWtqOptionsSaveService SaveService

@page "/apps"
@layout NarrowLayout

@code {

	public WtqOptions GlobalOpts { get; set; } = null!;

	protected override void OnInitialized()
	{
		Notifier.OnNotify(() => InvokeAsync(StateHasChanged));
		WtqOpts.OnChange((a, b) => Reload());

		Reload();
	}

	private void Reload()
	{
		GlobalOpts = WtqOpts.CurrentValue.JsonDeepClone();
	}

	private async Task AddApp()
	{
		GlobalOpts.Apps.Add(new()
		{
			Name = WtqConstants.GetRandomPlaceholderName(),
		});

		await SaveService.SaveAsync(GlobalOpts).NoCtx();
	}

	private async Task DeleteAppAsync(WtqAppOptions app)
	{
		if (await Dialog.Confirm(
			$"Delete app '{app.Name}'?", "Are you sure?",
			new ConfirmOptions()
			{
				OkButtonText = "Yes",
				CancelButtonText = "No",
			}) ?? false)
		{
			GlobalOpts.Apps.Remove(app);

			await SaveService.SaveAsync(GlobalOpts).NoCtx();
		}
	}

}

<PageHead Icon="ad_group">Apps</PageHead>

<p>Here are the applications who's windows can be toggle on and -off.</p>
<p>Take a look at the <RadzenLink Path="/examples" Text="Examples" /> page for, well, examples.</p>

<p><SettingsFileLink /></p>

<RadzenStack>

	@foreach (var app in GlobalOpts.Apps)
	{
		<RadzenCard Variant="Variant.Flat" class="rz-p-0">

			<RadzenRow Gap="0" JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center">

				<RadzenColumn Size="6">
					<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
						<h2 class="rz-m-0 rz-mx-4">@app.Name</h2>
						@foreach (var hk in @app.Hotkeys)
						{
							<RadzenBadge BadgeStyle="BadgeStyle.Primary" class="rz-mr-1">@hk.Sequence.ToShortString()</RadzenBadge>
						}
					</RadzenStack>
				</RadzenColumn>

				<RadzenColumn Size="6">
					<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="10" class="rz-m-3">
						<RadzenButton Size="ButtonSize.Medium" Icon="search" Text="Settings" Click="@(() => NavMan.NavigateTo($"/apps/{app.Name}"))" />
						<RadzenButton Click="@(() => DeleteAppAsync(app))" Size="ButtonSize.Medium" Icon="delete" ButtonStyle="ButtonStyle.Danger" Text="Delete" />
					</RadzenStack>
				</RadzenColumn>

			</RadzenRow>
		</RadzenCard>
	}

	<RadzenCard Variant="Variant.Outlined" class="rz-p-0">
		<RadzenRow Gap="0" JustifyContent="JustifyContent.SpaceBetween">
			<RadzenColumn Size="12">
				<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="10" class="rz-m-3">
					<RadzenButton Click="AddApp" Size="ButtonSize.Medium" Icon="add" Text="Add" />
				</RadzenStack>
			</RadzenColumn>
		</RadzenRow>
	</RadzenCard>

</RadzenStack>