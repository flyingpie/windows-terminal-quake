@page "/Apps/{AppId}"
@using Wtq.Configuration

@code {

	[Parameter] public string AppId { get; set; }

	public int radioButtonValue;

	public int value;
	public string? value1;
	public bool valuec;

	private void HandleKeyDown(KeyboardEventArgs e)
	{
		value1 = $"[CTRL:{e.CtrlKey} ALT:{e.AltKey} SHIFT:{e.ShiftKey} META:{e.MetaKey}] KEY:{e.Key} CODE:{e.Code} REPEAT:{e.Repeat} TYPE:{e.Type}";
	}

}

<h1>App <span class="rz-color-primary">@AppId</span></h1>

<RadzenStack>
	<RadzenFieldset Text="Process">
		<RadzenStack Gap="1rem">

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Filename" Component="FileName" />
				<RadzenColumn Size="8">
					<RadzenTextBox @bind-Value="@value1" Name="FileName" style="width: 100%;" />

					<Descr>
						The <Emph>filename</Emph> to use when starting a new process
						for the app. Eg. <Emph>notepad</Emph>, <Emph>dolphin</Emph>, etc.
					</Descr>
				</RadzenColumn>
			</RadzenRow>

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Process name" Component="ProcessName" IsOptional="true" />
				<RadzenColumn Size="8">
					<RadzenTextBox @bind-Value="@value1" Name="ProcessName" style="width: 100%;" />

					<Descr>
						Apps sometimes have <Emph>process names</Emph> different
						from their <Emph>filenames</Emph>. This field can be used
						to look for the process name in such cases. Windows Terminal is
						an example, with filename <Emph>wt</Emph>, and process name
						<Emph>WindowsTerminal</Emph>.
					</Descr>
				</RadzenColumn>
			</RadzenRow>

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Arguments" Component="Arguments" IsOptional="true"/>
				<RadzenColumn Size="8">
					<RadzenTextBox Style="width: 100%;" Name="Arguments" />

					<Descr>
						Additional <Emph>arguments</Emph> to pass to the process, when
						starting a new one.
					</Descr>
				</RadzenColumn>
			</RadzenRow>

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Attach mode" Component="AttachMode"/>
				<RadzenColumn Size="8">
					<RadzenRadioButtonList @bind-Value=@radioButtonValue TValue="int" Orientation="Orientation.Vertical">
						<Items>
							<RadzenRadioButtonListItem Value="1" Text="Find or Start"/>
							<RadzenRadioButtonListItem Value="2" Text="Find only"/>
							<RadzenRadioButtonListItem Value="3" Text="Start always" Disabled="true"/>
							<RadzenRadioButtonListItem Value="4" Text="Manual"/>
						</Items>
					</RadzenRadioButtonList>

					<Descr>
						How to get a reference to a running app.<br/>
						<Emph>Find or Start</Emph> looks for an existing instance, and creates one should none exist.<br/>
						<Emph>Find only</Emph> looks for an existing app instance, and does nothing should none be found.<br/>
						<Emph>Start always</Emph> always creates a new app instance, even if one already exists.<br/>
						<Emph>Maual</Emph> attaches to whatever app has focus, when the hotkey is pressed.
					</Descr>
				</RadzenColumn>
			</RadzenRow>

		</RadzenStack>
	</RadzenFieldset>

	<RadzenFieldset Text="Hotkeys">
		<RadzenStack Gap="1rem">
			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Modifier(s) + key"/>
				<RadzenColumn Size="8">
					<RadzenTextBox
						Style="width: 100%;"
						Name="s"
						@onkeydown="HandleKeyDown"
						Placeholder="Type here to set hotkey."
						@bind-Value="@value1"
					/>

					<Descr>What hotkeys should toggle the app. Select the textbox and press the desired key combo.</Descr>
				</RadzenColumn>
			</RadzenRow>
		</RadzenStack>
	</RadzenFieldset>

	<RadzenFieldset Text="Behavior">
		<RadzenStack Gap="1rem">

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Always on top" Component="AlwaysOnTop"/>
				<RadzenColumn Size="8">
					<RadzenCheckBox @bind-Value=@valuec Name="AlwaysOnTop"/>

					<Descr>Keep the app on top of other windows, even on focus lost.</Descr>
				</RadzenColumn>
			</RadzenRow>

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Hide on focus lost" Component="HideOnFocusLost"/>
				<RadzenColumn Size="8">
					<RadzenRadioButtonList @bind-Value=@radioButtonValue TValue="int" Orientation="Orientation.Vertical">
						<Items>
							<RadzenRadioButtonListItem Value="1" Text="Always"/>
							<RadzenRadioButtonListItem Value="2" Text="Never"/>
							<RadzenRadioButtonListItem Value="3" Text="Unless focus changed screen" Disabled="true"/>
						</Items>
					</RadzenRadioButtonList>

					<Descr>Whether the app should <Emph>toggle off</Emph> when focus lost.</Descr>
				</RadzenColumn>
			</RadzenRow>

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Taskbar icon visibility" Component="TaskbarIconVisibility"/>
				<RadzenColumn Size="8">
					<RadzenRadioButtonList @bind-Value=@radioButtonValue TValue="int" Orientation="Orientation.Vertical">
						<Items>
							<RadzenRadioButtonListItem Value="1" Text="Always"/>
							<RadzenRadioButtonListItem Value="2" Text="Never"/>
							<RadzenRadioButtonListItem Value="3" Text="When app visible" Disabled="true"/>
						</Items>
					</RadzenRadioButtonList>

					<Descr>If and when the app icon should be visible on the <Emph>taskbar</Emph>.</Descr>
				</RadzenColumn>
			</RadzenRow>

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Opacity" Component="Opacity"/>
				<RadzenColumn Size="8">
					<RadzenNumeric @bind-Value="@value" Name="Opacity" class="rz-mr-4" style="width: 80px;"/>
					<RadzenSlider @bind-Value=@value TValue="int" />

					<Descr>Makes the entire app window transparent. Note that this includes the title bar.</Descr>
				</RadzenColumn>
			</RadzenRow>

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Window Title Override" Component="WindowTitleOverride" IsOptional="true"/>
				<RadzenColumn Size="8">
					<RadzenTextBox @bind-Value="@value1" Name="WindowTitleOverride" style="width: 100%;"/>

					<Descr>
						Attempt to set the app <Emph>window title</Emph> to this value.
						Note that this may work for some apps.
					</Descr>
				</RadzenColumn>
			</RadzenRow>

		</RadzenStack>
	</RadzenFieldset>

	<RadzenFieldset Text="Position">
		<RadzenStack Gap="1rem">

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Filename" Component="FileName" />
				<RadzenColumn Size="8">
					<RadzenRadioButtonList @bind-Value=@radioButtonValue TValue="int" Orientation="Orientation.Vertical">
						<Items>
							<RadzenRadioButtonListItem Value="1" Text="Always"/>
							<RadzenRadioButtonListItem Value="2" Text="Never"/>
							<RadzenRadioButtonListItem Value="3" Text="When app visible" Disabled="true"/>
						</Items>
					</RadzenRadioButtonList>

					<Descr>
						The <Emph>filename</Emph> to use when starting a new process
						for the app. Eg. <Emph>notepad</Emph>, <Emph>dolphin</Emph>, etc.
					</Descr>
				</RadzenColumn>
			</RadzenRow>
		</RadzenStack>
	</RadzenFieldset>

	<RadzenFieldset Text="Monitor">
		<RadzenStack Gap="1rem">

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Prefer monitor" Component="PreferMonitor" />
				<RadzenColumn Size="8">
					<RadzenRadioButtonList @bind-Value=@radioButtonValue TValue="int" Orientation="Orientation.Vertical">
						<Items>
							<RadzenRadioButtonListItem Value="1" Text="With cursor"/>
							<RadzenRadioButtonListItem Value="2" Text="Primary"/>
							<RadzenRadioButtonListItem Value="3" Text="At index"/>
						</Items>
					</RadzenRadioButtonList>

					<Descr>
						What <Emph>monitor</Emph> to toggle onto.
					</Descr>
				</RadzenColumn>
			</RadzenRow>

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Monitor Index" Component="MonitorIndex" />
				<RadzenColumn Size="8">
					<RadzenRadioButtonList @bind-Value=@radioButtonValue TValue="int" Orientation="Orientation.Vertical">
						<Items>
							<RadzenRadioButtonListItem Value="1" Text="Always"/>
							<RadzenRadioButtonListItem Value="2" Text="Never"/>
							<RadzenRadioButtonListItem Value="3" Text="When app visible" Disabled="true"/>
						</Items>
					</RadzenRadioButtonList>

					<Descr>
						The <Emph>filename</Emph> to use when starting a new process
						for the app. Eg. <Emph>notepad</Emph>, <Emph>dolphin</Emph>, etc.
					</Descr>
				</RadzenColumn>
			</RadzenRow>
		</RadzenStack>
	</RadzenFieldset>

	<RadzenFieldset Text="Animation">
		<RadzenStack Gap="1rem">

			<RadzenRow AlignItems="AlignItems.Start">
				<SettingLabel Text="Filename" Component="FileName" />
				<RadzenColumn Size="8">
					<RadzenDropDown
						@bind-Value=@value
						Data=@(Enum.GetNames(typeof(AnimationType)))
						Style="width: 100%; max-width: 400px;"
						Name="DropDownBindValue"
					/>

					<Descr>
						The <Emph>filename</Emph> to use when starting a new process
						for the app. Eg. <Emph>notepad</Emph>, <Emph>dolphin</Emph>, etc.
					</Descr>
				</RadzenColumn>
			</RadzenRow>
		</RadzenStack>
	</RadzenFieldset>

</RadzenStack>








