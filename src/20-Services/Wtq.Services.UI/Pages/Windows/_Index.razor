@page "/windows"

@inject IWtqWindowService WindowService

@code {
	private List<WtqWindow>? _windows;
	private List<(string, Func<WtqWindow, object>)> _props;

	protected override async Task OnInitializedAsync()
	{
		_props = await WindowService.GetWindowPropertiesAsync().NoCtx();
		_windows = (await WindowService.GetWindowsAsync(CancellationToken.None)).OrderBy(w => w.Name).ToList();
	}

}

<PageHead Icon="select_window">Windows</PageHead>

@if (_windows != null)
{
	<RadzenDataGrid
	Data="@_windows"
	GridLines="DataGridGridLines.Both"
	AllowPaging="true"
	AllowSorting="true"
	Count="@_windows.Count"
	PageSize="50"
	AllowFiltering="true"
	AllowColumnResize="true"
	>
		<Columns>

			@foreach (var prop in _props)
			{
				<RadzenDataGridColumn Width="320px" Property="@prop.Item1" Title="@prop.Item1">
					<Template Context="item">
						<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween">
							@prop.Item2(item)
							<RadzenLink Icon="content_copy"/>
						</RadzenStack>
					</Template>
				</RadzenDataGridColumn>
			}

		</Columns>
	</RadzenDataGrid>
}