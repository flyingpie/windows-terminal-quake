@using System.Text
@using Wtq.Services.UI.Extensions

@code {

	private bool _isSuper;

	[EditorRequired]
	[Parameter]
	public HotkeyOptions Options { get; set; } = new();

	[EditorRequired]
	[Parameter]
	public Action OnRemove { get; set; }

	private string Description
	{
		get
		{
			if (Options.Key != Keys.None || Options.Modifiers != KeyModifiers.None)
			{
				return Options.ToString();
			}

			return "(press a shortcut here)";
		}
	}

	private bool IsSuper(KeyboardEventArgs e)
	{
		return (e.Key ?? string.Empty).Equals("super", StringComparison.OrdinalIgnoreCase);
	}

	private void Clear()
	{
		Options.Modifiers = KeyModifiers.None;
		Options.Key = Keys.None;
	}

	private void HandleKeyDown(KeyboardEventArgs e)
	{
		if (IsSuper(e))
		{
			_isSuper = true;
		}

		e.ToModifiersAndKey(out var mod, out var key);

		if (_isSuper)
		{
			mod |= KeyModifiers.Super;
		}

		Options.Modifiers = mod;
		Options.Key = key;
	}

	private void HandleKeyUp(KeyboardEventArgs e)
	{
		if (IsSuper(e))
		{
			_isSuper = false;
		}
	}

}

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="8">

	<!-- Shortcut capturing textbox -->
	<RadzenTextBox
		Style="width: 100%;"
		@onkeydown="(ev) => HandleKeyDown(ev)"
		@onkeyup="(ev) => HandleKeyUp(ev)"
		Placeholder="Type here to set hotkey."
		Value="@Description"
	/>

	<!-- Clear button -->
	<RadzenButton
		Icon="backspace"
		Size="ButtonSize.Medium"
		Click="@(() => Clear())"
	/>

	<!-- Remove button -->
	<RadzenButton
		Icon="delete"
		Size="ButtonSize.Medium"
		Click="@(() => OnRemove())"
	/>

</RadzenStack>