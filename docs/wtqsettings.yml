WtqSettings:
  Categories:
  - Name: ':material-earth: Global options'
    Description: Defines WTQ-wide options, including the list of configured apps.
    Groups:
    - Name: General
      Settings:
      - DisplayName: Apps
        SettingName: Apps
        Description: Applications to enable Quake-style dropdown for.
        IsGlobal: true
        IsApp: false
        IsEnum: false
        IsRequired: true
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: true
        Example: >-
          {
            "Apps": [
              { "Name": "App 1" },
              { "Name": "App 2" },
              // ...
            ]
          }
        Remarks: See the GUI and the <a href="#app-examples">docs</a> for some examples.
      - DisplayName: Hotkeys
        SettingName: Hotkeys
        Description: Global hotkeys, that toggle either the first, or the most recently toggled app.
        IsGlobal: true
        IsApp: false
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: true
        Example: >-
          {
            "Hotkeys": [
              { "Modifiers": "Control", "Key": "Q" }
            ]
          }
        Remarks: ""
      - DisplayName: Feature flags
        SettingName: FeatureFlags
        Description: >-
          <p>Sometimes functionality is added or changed that carries more risk of introducing bugs.</p>

          <p>For these cases, such functionality can be put behind a "feature flag", which makes them opt-in or opt-out.</p>

          <p>That way, we can still merge to master, and make it part of the stable release version (reducing branches and dev builds and what not),

          but still have a way back should things go awry.</p>
        IsGlobal: true
        IsApp: false
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Show UI on start
        SettingName: ShowUiOnStart
        Description: Whether to show the GUI when WTQ is started.
        IsGlobal: true
        IsApp: false
        IsEnum: false
        IsRequired: false
        DefaultValue: false
        ExampleValue: false
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Tray icon (color) style
        SettingName: TrayIconStyle
        Description: The tray icon (color) style (dark/light).
        IsGlobal: true
        IsApp: false
        IsEnum: true
        IsRequired: false
        DefaultValue: Auto
        ExampleValue: Auto
        EnumValues:
        - Value: Auto
          DisplayName: Auto
          Description: Attempt to detect the OS theme and use the appropriate style based on that.
        - Value: Dark
          DisplayName: Dark
          Description: Dark icon, works best on lighter themes.
        - Value: Light
          DisplayName: Light
          Description: Light icon, works best on darker themes.
        HasExample: false
        Example: ""
        Remarks: ""
    - Name: Animation
      Settings:
      - DisplayName: Animation target FPS
        SettingName: AnimationTargetFps
        Description: >-
          <p>How many frames per second the animation should be.</p>

          <p>Note that this may not be hit if moving windows takes too long, hence "target" fps.</p>

          <p>Must be between 5 and 120, to prevent issues that can arise with values that are too low or too high.</p>
        IsGlobal: true
        IsApp: false
        IsEnum: false
        IsRequired: false
        DefaultValue: 40
        ExampleValue: 40
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
    - Name: 
      Settings:
      - DisplayName: Api
        SettingName: Api
        Description: Options related to the HTTP API, that can be used to control WTQ programmatically.
        IsGlobal: true
        IsApp: false
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
  - Name: ':material-application-outline: App options'
    Description: Defines the options for a single toggleable app (eg. Windows Terminal, some other terminal, a file browser, etc.).
    Groups:
    - Name: App
      Settings:
      - DisplayName: Name
        SettingName: Name
        Description: >-
          <p>A logical name for the app, used to identify it across config reloads.</p>

          <p>Appears in logs.</p>
        IsGlobal: false
        IsApp: true
        IsEnum: false
        IsRequired: true
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: true
        Example: >-
          {
            "Name": "Terminal",
            // ...
          }
        Remarks: ""
      - DisplayName: Hotkeys
        SettingName: Hotkeys
        Description: One or more keyboard shortcuts that toggle in- and out this particular app.
        IsGlobal: false
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
    - Name: Process
      Settings:
      - DisplayName: Filename
        SettingName: FileName
        Description: >-
          <p>The <strong>filename</strong> to use when starting a new process for the app.</p>

          <p>E.g. <strong>notepad</strong>, <strong>dolphin</strong>, etc.</p>

          <p>Note that you can also put absolute paths in here.</p>
        IsGlobal: false
        IsApp: true
        IsEnum: false
        IsRequired: true
        DefaultValue: 
        ExampleValue: wt
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: See the "Examples" page in the GUI for, well, examples.
      - DisplayName: Arguments
        SettingName: Arguments
        Description: >-
          <p>Command-line arguments that should be passed to the app when it's started.</p>

          <p>Note that this only applies when using an <strong>AttachMode</strong> that starts the app.</p>
        IsGlobal: false
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Argument list
        SettingName: ArgumentList
        Description: >-
          <p>Command-line arguments that should be passed to the app when it's started.</p>

          <p>Note that this only applies when using an <strong>AttachMode</strong> that starts the app.</p>
        IsGlobal: false
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: true
        Example: >-
          {
            "Apps": [
              {
                "ArgumentList": [
                  "--allow-screencapture",
                  "--debug-info",
                ],
                // ...
              }
            ]
          }
        Remarks: ""
      - DisplayName: Working directory
        SettingName: WorkingDirectory
        Description: >-
          <p>Working directory when starting a new process.</p>

          <p>Useful if the <strong>filename</strong> isn't available through PATH.</p>
        IsGlobal: false
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Process name
        SettingName: ProcessName
        Description: >-
          <p>Apps sometimes have <strong>process names</strong> different from their <strong>filenames</strong>.

          This field can be used to look for the process name in such cases. Windows Terminal is an

          example, with filename <strong>wt</strong>, and process name <strong>WindowsTerminal</strong>.</p>

          <p>Supports regular expressions.</p>
        IsGlobal: false
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: true
        Example: >-
          {
            // Using with Windows Terminal requires both "Filename" and "ProcessName".
            "Apps": {
              "Filename": "wt",
              "ProcessName": "^WindowsTerminal$"
            }
          }
        Remarks: ""
      - DisplayName: Main window
        SettingName: MainWindow
        Description: >-
          <p>(Windows only) Matches only "main" windows; the initial window a process spawns.</p>

          <p>When a process spawns multiple windows, 1 is usually the "main" window. In many cases, this is also the window

          that you'd want to use WTQ with. Non-main-windows are usually child windows like popups and such.

          When the other (non-main) windows cannot be easily differentiated from the main window (for example through

          the window class or -title), the "is-main-window"-property can be very useful to home in on the desired window.</p>

          <p>A common example of an app where this would <strong>not</strong> help, is a browser, that can spawn tons of windows on the same process name.</p>
        IsGlobal: false
        IsApp: true
        IsEnum: true
        IsRequired: false
        DefaultValue: Either
        ExampleValue: Either
        EnumValues:
        - Value: MainWindowOnly
          DisplayName: Main window only
          Description: Match main windows only.
        - Value: NonMainWindowOnly
          DisplayName: Non-main window only
          Description: Match non-main windows only.
        - Value: Either
          DisplayName: Either
          Description: Match main- and non-main windows.
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Window class
        SettingName: WindowClass
        Description: >-
          <p>(Windows only) Matches windows based on their Win32 Window Class.</p>

          <p>Supports regular expressions.</p>
        IsGlobal: false
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: ^ApplicationFrameWindow$
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Window title
        SettingName: WindowTitle
        Description: >-
          <p>Match windows based on their title (sometimes referred to as "caption").</p>

          <p>Supports regular expressions.</p>
        IsGlobal: false
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: ^Mozilla Firefox - WhatsApp$
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
    - Name: Behavior
      Settings:
      - DisplayName: Window title override
        SettingName: WindowTitleOverride
        Description: >-
          <p>Attempt to set the window title to a specific value.</p>

          <p>Useful for cases where multiple programs control window placement (such as when

          using WTQ together with a window manager) and the window title can be used to

          opt-out in the other program.</p>
        IsGlobal: false
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: Note that this doesn't work for all windows, as it depends on factors like the app's GUI kit.
  - Name: ':material-cogs: Shared options'
    Description: Options that are available both in global- and per-app options.
    Groups:
    - Name: Process
      Settings:
      - DisplayName: Attach mode
        SettingName: AttachMode
        Description: >-
          <p>How WTQ should get to an instance of a running app.</p>

          <p>I.e. whether to start an app instance if one cannot be found.</p>
        IsGlobal: true
        IsApp: true
        IsEnum: true
        IsRequired: false
        DefaultValue: FindOrStart
        ExampleValue: FindOrStart
        EnumValues:
        - Value: Find
          DisplayName: Find
          Description: Only look for <strong>existing</strong> app instances (but don't create one).
        - Value: FindOrStart
          DisplayName: Find or start
          Description: Look for an <strong>existing</strong> app instance, <strong>create one</strong> if one does not exist yet.
        - Value: Manual
          DisplayName: Manual
          Description: Attach to <strong>whatever app is in the foreground</strong> when pressing an assigned hotkey.
        HasExample: false
        Example: ""
        Remarks: ""
    - Name: Behavior
      Settings:
      - DisplayName: Always on top
        SettingName: AlwaysOnTop
        Description: Whether the app should always be on top of other windows, regardless of whether it has focus.
        IsGlobal: true
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: false
        ExampleValue: false
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Hide on focus lost
        SettingName: HideOnFocusLost
        Description: Whether the app should be toggled off when another app gets focus.
        IsGlobal: true
        IsApp: true
        IsEnum: true
        IsRequired: false
        DefaultValue: Always
        ExampleValue: Always
        EnumValues:
        - Value: Always
          DisplayName: Always
          Description: Toggle off the app when focus is lost.
        - Value: Never
          DisplayName: Never
          Description: Do not toggle off the app when focus is lost.
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Taskbar icon visibility
        SettingName: TaskbarIconVisibility
        Description: When to show the app window icon on the taskbar.
        IsGlobal: true
        IsApp: true
        IsEnum: true
        IsRequired: false
        DefaultValue: AlwaysHidden
        ExampleValue: AlwaysHidden
        EnumValues:
        - Value: AlwaysHidden
          DisplayName: Always hidden
          Description: <strong>Never</strong> show the taskbar icon.
        - Value: AlwaysVisible
          DisplayName: Always visible
          Description: <strong>Always</strong> show the taskbar icon (note that this can look a bit weird when the app is toggled off).
        - Value: WhenAppVisible
          DisplayName: When the app is visible
          Description: Only show the taskbar icon when the app is toggled <strong>on</strong>.
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Opacity
        SettingName: Opacity
        Description: >-
          <p>Make the window see-through (applies to the entire window, including the title bar).</p>

          <p>0 (invisible) - 100 (opaque).</p>
        IsGlobal: true
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 100
        ExampleValue: 80
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
    - Name: Position
      Settings:
      - DisplayName: Horizontal screen coverage
        SettingName: HorizontalScreenCoverage
        Description: Horizontal screen coverage, as a percentage.
        IsGlobal: true
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 95
        ExampleValue: 95
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Horizontal align
        SettingName: HorizontalAlign
        Description: Where to position an app on the chosen monitor, horizontally.
        IsGlobal: true
        IsApp: true
        IsEnum: true
        IsRequired: false
        DefaultValue: Center
        ExampleValue: Center
        EnumValues:
        - Value: Center
          DisplayName: Center
          Description: Center of the screen.
        - Value: Left
          DisplayName: Left
          Description: Left of the screen.
        - Value: Right
          DisplayName: Right
          Description: Right of the screen.
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Vertical screen coverage
        SettingName: VerticalScreenCoverage
        Description: Vertical screen coverage as a percentage (0-100).
        IsGlobal: true
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 95
        ExampleValue: 95
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Vertical offset
        SettingName: VerticalOffset
        Description: How much room to leave between the top of the app window and the top of the screen, in pixels.
        IsGlobal: true
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 0
        ExampleValue: 0
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Off-screen locations
        SettingName: OffScreenLocations
        Description: >-
          <p>When moving an app off the screen, WTQ looks for an empty space to move the window to.</p>

          <p>Depending on your monitor setup, this may be above the screen, but switches to below if another monitor exists there.</p>

          <p>By default, WTQ looks for empty space in this order: Above, Below, Left, Right.</p>
        IsGlobal: true
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: true
        Example: "{\n    // Globally:\n    \"OffScreenLocations\": [\"Above\", \"Below\", \"Left\", \"Right\"],\n            \n    // For one app only:\n    \"Apps\": [\n        {\n            \"OffScreenLocations\": [\"Above\", \"Below\", \"Left\", \"Right\"],\n        }\n    ]\n}"
        Remarks: ""
    - Name: Monitor
      Settings:
      - DisplayName: Prefer monitor
        SettingName: PreferMonitor
        Description: Which monitor to preferably drop the app.
        IsGlobal: true
        IsApp: true
        IsEnum: true
        IsRequired: false
        DefaultValue: WithCursor
        ExampleValue: WithCursor
        EnumValues:
        - Value: WithCursor
          DisplayName: With cursor
          Description: The monitor where the mouse cursor is currently at.
        - Value: AtIndex
          DisplayName: At index
          Description: The monitor at the index as specified by <strong>MonitorIndex</strong> (0-based).
        - Value: Primary
          DisplayName: Primary
          Description: The monitor considered <strong>primary</strong> by the OS.
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Monitor index
        SettingName: MonitorIndex
        Description: >-
          <p>If <strong>PreferMonitor</strong> is set to <strong>AtIndex</strong>, this setting determines what monitor to choose.</p>

          <p>Zero based, e.g. 0, 1, etc.</p>
        IsGlobal: true
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 0
        ExampleValue: 0
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
    - Name: Animation
      Settings:
      - DisplayName: Animation duration
        SettingName: AnimationDurationMs
        Description: How long the animation should take, in milliseconds.
        IsGlobal: true
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 250
        ExampleValue: 250
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Animation type (toggle ON)
        SettingName: AnimationTypeToggleOn
        Description: The animation type to use when toggling on an application.
        IsGlobal: true
        IsApp: true
        IsEnum: true
        IsRequired: false
        DefaultValue: EaseOutQuart
        ExampleValue: EaseOutQuart
        EnumValues:
        - Value: Linear
          DisplayName: Linear
          Description: ""
        - Value: EaseInOutSine
          DisplayName: Ease in+out (sine)
          Description: ""
        - Value: EaseInBack
          DisplayName: Ease in back
          Description: ""
        - Value: EaseInCubic
          DisplayName: Ease in cubic
          Description: ""
        - Value: EaseInQuart
          DisplayName: Ease in quadratic
          Description: ""
        - Value: EaseOutBack
          DisplayName: Ease out back
          Description: ""
        - Value: EaseOutCubic
          DisplayName: Ease out cubic
          Description: ""
        - Value: EaseOutQuart
          DisplayName: Ease out quadratic
          Description: ""
        HasExample: false
        Example: ""
        Remarks: ""
      - DisplayName: Animation type (toggle OFF)
        SettingName: AnimationTypeToggleOff
        Description: The animation type to use when toggling off an application.
        IsGlobal: true
        IsApp: true
        IsEnum: true
        IsRequired: false
        DefaultValue: EaseInQuart
        ExampleValue: EaseInQuart
        EnumValues:
        - Value: Linear
          DisplayName: Linear
          Description: ""
        - Value: EaseInOutSine
          DisplayName: Ease in+out (sine)
          Description: ""
        - Value: EaseInBack
          DisplayName: Ease in back
          Description: ""
        - Value: EaseInCubic
          DisplayName: Ease in cubic
          Description: ""
        - Value: EaseInQuart
          DisplayName: Ease in quadratic
          Description: ""
        - Value: EaseOutBack
          DisplayName: Ease out back
          Description: ""
        - Value: EaseOutCubic
          DisplayName: Ease out cubic
          Description: ""
        - Value: EaseOutQuart
          DisplayName: Ease out quadratic
          Description: ""
        HasExample: false
        Example: ""
        Remarks: ""
    - Name: Events
      Settings:
      - DisplayName: Event hooks
        SettingName: EventHooks
        Description: Execute a program when some event occurs.
        IsGlobal: true
        IsApp: true
        IsEnum: false
        IsRequired: false
        DefaultValue: 
        ExampleValue: 
        EnumValues: 
        HasExample: false
        Example: ""
        Remarks: ""
